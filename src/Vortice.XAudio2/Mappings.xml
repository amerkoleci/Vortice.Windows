<?xml version="1.0" encoding="utf-8"?>
<config id="vortice-xaudio2" xmlns="urn:SharpGen.Config">
  <assembly>Vortice.XAudio2</assembly>
  <namespace>Vortice.XAudio2</namespace>
  <depends>SharpGen.Runtime.COM</depends>
  <depends>Vortice.Multimedia</depends>

  <sdk name="WindowsSdk" version="10.0.20348.0" />
  <sdk name="StdLib" />
  <include-dir override="true">$(THIS_CONFIG_PATH)/../native/include</include-dir>

  <include file="xaudio2redist.h" attach="true" />
  <include file="xaudio2fxredist.h" attach="true" namespace="Vortice.XAudio2.Fx" output="Fx" />
  <include file="x3daudioredist.h" attach="true" output="X3DAudio" />

  <extension>
    <define struct="System.Drawing.Point" sizeof="8" />
    <define struct="System.Drawing.PointF" sizeof="8" />
    <define struct="System.Drawing.Size" sizeof="8" />
    <define struct="System.Drawing.SizeF" sizeof="8" />
    <define struct="System.Drawing.Rectangle" sizeof="16" />
    <define struct="System.Drawing.RectangleF" sizeof="16" />
    <define struct="System.Numerics.Vector2" sizeof="8" />
    <define struct="System.Numerics.Vector3" sizeof="12" />
    <define struct="System.Numerics.Vector4" sizeof="16" />
    <define struct="System.Numerics.Matrix3x2" sizeof="24" />
    <define struct="System.Numerics.Matrix4x4" sizeof="64" />

    <create-cpp enum="XAUDIO2_VOICE_SEND_FLAGS" macro="XAUDIO2_SEND_(USEFILTER)" />
    <create-cpp enum="XAUDIO2_VOICE_FLAGS" macro="XAUDIO2_VOICE_.*" />
    <create-cpp enum="XAUDIO2_FLAGS" macro="XAUDIO2_DEBUG_ENGINE" />
    <create-cpp enum="XAUDIO2_PLAY_FLAGS" macro="XAUDIO2_PLAY_.*" />
    <create-cpp enum="XAUDIO2_LOG_TYPE" macro="XAUDIO2_LOG_.*" />
    <create-cpp enum="XAUDIO2_BUFFER_FLAGS" macro="XAUDIO2_END_OF_STREAM" />
    <create-cpp enum="XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER" macro="Processor[0-9]+|XAUDIO2_ANY_PROCESSOR|XAUDIO2_DEFAULT_PROCESSOR|XAUDIO2_USE_DEFAULT_PROCESSOR" />
    <const from-guid="CLSID_XAudio2.*" class="Vortice.XAudio2.IXAudio2" type="System.Guid">new System.Guid("$1")</const>
    <const from-guid="IID_IXAudio2" class="Vortice.XAudio2.IXAudio2" type="System.Guid">new System.Guid("$1")</const>

    <const from-macro="XAUDIO2_MAX_BUFFER_BYTES" type="int" cpp-type="int" name="MaximumBufferBytes" class="Vortice.XAudio2.IXAudio2" visibility="public const">unchecked((int)$1)</const>
    <const from-macro="XAUDIO2_MAX_QUEUED_BUFFERS" type="int" cpp-type="int" name="MaximumQueuedBuffers" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_AUDIO_CHANNELS" type="int" cpp-type="int" name="MaximumAudioChannels" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MIN_SAMPLE_RATE" type="int" cpp-type="int" name="MinimumSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_SAMPLE_RATE" type="int" cpp-type="int" name="MaximumSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_VOLUME_LEVEL" type="float" cpp-type="float" name="MaximumVolumeLevel" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MIN_FREQ_RATIO" type="float" cpp-type="float" name="MinimumFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FREQ_RATIO" type="float" cpp-type="float" name="MaximumFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_FREQ_RATIO" type="float" cpp-type="float" name="DefaultFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FILTER_ONEOVERQ" type="float" cpp-type="float" name="MaximumFilterOneOverQ" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FILTER_FREQUENCY" type="float" cpp-type="float" name="MaximumFilterFrequency" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_LOOP_COUNT" type="int" cpp-type="int" name="MaximumLoopCount" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_COMMIT_NOW" type="int" cpp-type="int" name="CommitNow" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_COMMIT_ALL" type="int" cpp-type="int" name="CommitAll" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_NO_LOOP_REGION" type="int" cpp-type="int" name="NoLoopRegion" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_LOOP_INFINITE" type="int" cpp-type="int" name="LoopInfinite" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_CHANNELS" type="int" cpp-type="int" name="DefaultChannels" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_SAMPLERATE" type="int" cpp-type="int" name="DefaultSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_VOICE_NOSAMPLESPLAYED" type="int" cpp-type="int" name="NoSamplesPlayed" class="Vortice.XAudio2.IXAudio2SourceVoice" visibility="private const" />

    <create class="ResultCode" visibility="public"/>
    <const from-macro="XAUDIO2_E_(.*)" type="SharpGen.Runtime.ResultDescriptor" cpp-type="int" name="$1" class="Vortice.XAudio2.ResultCode" visibility="public static readonly">new SharpGen.Runtime.ResultDescriptor($1, "$3", "$0", "$2")</const>

    <define struct="Vortice.XAudio2.X3DAudioHandle" sizeof="20" />
    <create-cpp enum="X3DAudioCalculateFlags" macro="X3DAUDIO_CALCULATE_.*" />

    <create class="Vortice.XAudio2.Fx.Fx" visibility="public static"/>
    <const from-macro="XAUDIO2FX_REVERB_MIN_WET_DRY_MIX"       type="float" cpp-type="float" name="ReverbMinWetDryMix" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_REFLECTIONS_DELAY" type="int"   cpp-type="int"   name="ReverbMinReflectionsDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_REVERB_DELAY"      type="byte"  cpp-type="int"  name="ReverbMinReverbDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_REAR_DELAY"        type="byte"  cpp-type="int"  name="ReverbMinRearDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_POSITION"          type="byte"  cpp-type="int"  name="ReverbMinPosition" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_DIFFUSION"         type="byte"  cpp-type="int"  name="ReverbMinDiffusion" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_LOW_EQ_GAIN"       type="byte"  cpp-type="int"  name="ReverbMinLowEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_LOW_EQ_CUTOFF"     type="byte"  cpp-type="int"  name="ReverbMinLowEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_HIGH_EQ_GAIN"      type="byte"  cpp-type="int"  name="ReverbMinHighEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_HIGH_EQ_CUTOFF"    type="byte"  cpp-type="int"  name="ReverbMinHighEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_ROOM_FILTER_FREQ"  type="float" cpp-type="float" name="ReverbMinRoomFilterFreq" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_ROOM_FILTER_MAIN"  type="float" cpp-type="float" name="ReverbMinRoomFilterMain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_ROOM_FILTER_HF"    type="float" cpp-type="float" name="ReverbMinRoomFilterHf" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_REFLECTIONS_GAIN"  type="float" cpp-type="float" name="ReverbMinReflectionsGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_REVERB_GAIN"       type="float" cpp-type="float" name="ReverbMinReverbGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_DECAY_TIME"        type="float" cpp-type="float" name="ReverbMinDecayTime" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_DENSITY"           type="float" cpp-type="float" name="ReverbMinDensity" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MIN_ROOM_SIZE"         type="float" cpp-type="float" name="ReverbMinRoomSize" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />

    <const from-macro="XAUDIO2FX_REVERB_MAX_WET_DRY_MIX"       type="float" cpp-type="float" name="ReverbMaxWetDryMix" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_REFLECTIONS_DELAY" type="int"   cpp-type="int"   name="ReverbMaxReflectionsDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_REVERB_DELAY"      type="byte"  cpp-type="int"  name="ReverbMaxReverbDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_REAR_DELAY"        type="byte"  cpp-type="int"  name="ReverbMaxRearDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_POSITION"          type="byte"  cpp-type="int"  name="ReverbMaxPosition" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_DIFFUSION"         type="byte"  cpp-type="int"  name="ReverbMaxDiffusion" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_LOW_EQ_GAIN"       type="byte"  cpp-type="int"  name="ReverbMaxLowEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_LOW_EQ_CUTOFF"     type="byte"  cpp-type="int"  name="ReverbMaxLowEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_HIGH_EQ_GAIN"      type="byte"  cpp-type="int"  name="ReverbMaxHighEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_HIGH_EQ_CUTOFF"    type="byte"  cpp-type="int"  name="ReverbMaxHighEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_ROOM_FILTER_FREQ"  type="float" cpp-type="float" name="ReverbMaxRoomFilterFreq" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_ROOM_FILTER_MAIN"  type="float" cpp-type="float" name="ReverbMaxRoomFilterMain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_ROOM_FILTER_HF"    type="float" cpp-type="float" name="ReverbMaxRoomFilterHf" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_REFLECTIONS_GAIN"  type="float" cpp-type="float" name="ReverbMaxReflectionsGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_REVERB_GAIN"       type="float" cpp-type="float" name="ReverbMaxReverbGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_DECAY_TIME"        type="float" cpp-type="float" name="ReverbMaxDecayTime" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_DENSITY"           type="float" cpp-type="float" name="ReverbMaxDensity" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_MAX_ROOM_SIZE"         type="float" cpp-type="float" name="ReverbMaxRoomSize" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />

    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_WET_DRY_MIX"       type="float" cpp-type="float" name="ReverbDefaultWetDryMix" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_DELAY" type="int"   cpp-type="int"   name="ReverbDefaultReflectionsDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_REVERB_DELAY"      type="byte"  cpp-type="int"  name="ReverbDefaultReverbDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_REAR_DELAY"        type="byte"  cpp-type="int"  name="ReverbDefaultRearDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_7POINT1_SIDE_DELAY" type="byte"  cpp-type="int"  name="ReverbDefault7Point1SideDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_7POINT1_REAR_DELAY" type="byte"  cpp-type="int"  name="ReverbDefault7Point1RearDelay" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_POSITION"          type="byte"  cpp-type="int"  name="ReverbDefaultPosition" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_POSITION_MATRIX"   type="byte"  cpp-type="int"  name="ReverbDefaultPositionMatrix" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_EARLY_DIFFUSION"   type="byte"  cpp-type="int"  name="ReverbDefaultEarlyDiffusion" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_LATE_DIFFUSION"    type="byte"  cpp-type="int"  name="ReverbDefaultLateDiffusion" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_GAIN"       type="byte"  cpp-type="int"  name="ReverbDefaultLowEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_CUTOFF"     type="byte"  cpp-type="int"  name="ReverbDefaultLowEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_GAIN"      type="byte"  cpp-type="int"  name="ReverbDefaultHighEqGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_CUTOFF"    type="byte"  cpp-type="int"  name="ReverbDefaultHighEqCutoff" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_FREQ"  type="float" cpp-type="float" name="ReverbDefaultRoomFilterFreq" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_MAIN"  type="float" cpp-type="float" name="ReverbDefaultRoomFilterMain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_HF"    type="float" cpp-type="float" name="ReverbDefaultRoomFilterHf" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_GAIN"  type="float" cpp-type="float" name="ReverbDefaultReflectionsGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_REVERB_GAIN"       type="float" cpp-type="float" name="ReverbDefaultReverbGain" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_DECAY_TIME"        type="float" cpp-type="float" name="ReverbDefaultDecayTime" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_DENSITY"           type="float" cpp-type="float" name="ReverbDefaultDensity" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />
    <const from-macro="XAUDIO2FX_REVERB_DEFAULT_ROOM_SIZE"         type="float" cpp-type="float" name="ReverbDefaultRoomSize" class="Vortice.XAudio2.Fx.Fx" visibility="public const" />

  </extension>

  <bindings>
    <bind from="UINT32" to="System.Int32" />
    <bind from="X3DAUDIOHANDLE" to="Vortice.XAudio2.X3DAudioHandle" />
    <bind from="X3DAUDIO_VECTOR" to="System.Numerics.Vector3"/>
  </bindings>

  <mapping>
    <!-- Enums -->
    <map enum="XAUDIO2_(.*)" name-tmp="$1" />
    <map enum="XAUDIO2_LOG_TYPE" flags="true" />
    <map enum="XAUDIO2_FLAGS" name="XAudio2Flags" />
    <map enum="XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER" name="ProcessorSpecifier"/>
    <map enum-item="XAUDIO2_USE_DEFAULT_PROCESSOR" name="UseDefaultProcessor" />
    <map enum-item="XAUDIO2_ANY_PROCESSOR" name="AnyProcessor" />
    <map enum-item="XAUDIO2_DEFAULT_PROCESSOR" name="DefaultProcessor" />
    <map enum-item="XAUDIO2_VOICE_NOPITCH" name="NoPitch"/>
    <map enum-item="XAUDIO2_VOICE_NOSRC" name="NoSampleRateConversion"/>
    <map enum-item="XAUDIO2_VOICE_USEFILTER" name="UseFilter"/>
    <map enum-item="XAUDIO2_VOICE_MUSIC" name="Music"/>
    <map enum-item="XAUDIO2_SEND_(USEFILTER)" name="UseFilter"/>

    <!-- Structs -->
    <map struct="XAUDIO2_(.*)" name-tmp="$1" />
    <map struct="XAUDIO2_.*" pack="4" />
    <map struct="XAUDIO2FX_(.*)" name-tmp="$1" />

    <!-- XAUDIO2_BUFFER -->
    <map struct="XAUDIO2_BUFFER" name="AudioBuffer" />
    <map field="XAUDIO2_BUFFER::Flags" type="XAUDIO2_BUFFER_FLAGS" />
    <map field="XAUDIO2_BUFFER::pContext" name="Context" />
    <map struct="XAUDIO2_BUFFER" native="true" struct-to-class="true" marshal="false" new="false" />
    <map field="XAUDIO2_BUFFER::pAudioData" name="AudioDataPointer" />

    <!-- XAUDIO2FX_REVERB_PARAMETERS -->
    <map struct="XAUDIO2FX_REVERB_PARAMETERS" name="ReverbParameters" pack="1" />

    <!-- XAUDIO2_BUFFER_WMA -->
    <map struct="XAUDIO2_BUFFER_WMA" visibility="internal"/>
    <map field="XAUDIO2_BUFFER_WMA::pDecodedPacketCumulativeBytes" name="DecodedPacketCumulativeBytesPointer" />

    <!-- XAUDIO2_EFFECT_CHAIN -->
    <map struct="XAUDIO2_EFFECT_CHAIN" visibility="internal" />
    <map field="XAUDIO2_EFFECT_CHAIN::pEffectDescriptors" name="EffectDescriptorPointer" />
    <map field="XAUDIO2_EFFECT_CHAIN::pEffectDescriptors" visibility="internal" />
    <map field="XAUDIO2_VOICE_STATE::pCurrentBufferContext" name="Context" />

    <!-- XAUDIO2_EFFECT_DESCRIPTOR -->
    <map struct="XAUDIO2_EFFECT_DESCRIPTOR" native="true" struct-to-class="true" marshal="false" new="false" marshalto="true" />
    <map field="XAUDIO2_EFFECT_DESCRIPTOR::OutputChannels" name="OutputChannelCount" />
    <map field="XAUDIO2_EFFECT_DESCRIPTOR::pEffect" name="EffectPointer" />
    <map field="XAUDIO2_EFFECT_DESCRIPTOR::pEffect" visibility="internal" />

    <!-- XAUDIO2_VOICE_DETAILS -->
    <map field="XAUDIO2_VOICE_DETAILS::InputChannels" name="InputChannelCount" />

    <!-- XAUDIO2_SEND_DESCRIPTOR -->
    <map struct="XAUDIO2_SEND_DESCRIPTOR" name="VoiceSendDescriptor" />

    <!-- XAUDIO2_VOICE_SENDS -->
    <map struct="XAUDIO2_VOICE_SENDS" name="VoiceSendDescriptors" visibility="internal" />
    <map struct="XAUDIO2_VOICE_SENDS" name="VoiceSendDescriptors" />
    <map field="XAUDIO2_VOICE_SENDS::pSends" name="SendPointer" />
    <map field="XAUDIO2_VOICE_SENDS::pSends" visibility="internal" />

    <!-- XAUDIO2FX_VOLUMEMETER_LEVELS -->
    <map field="XAUDIO2FX_VOLUMEMETER_LEVELS::pPeakLevels" name="PeakLevelPointer" />
    <map field="XAUDIO2FX_VOLUMEMETER_LEVELS::pPeakLevels" visibility="internal" />
    <map field="XAUDIO2FX_VOLUMEMETER_LEVELS::pRMSLevels" name="RmsLevelsPointer" />
    <map field="XAUDIO2FX_VOLUMEMETER_LEVELS::pRMSLevels" visibility="internal" />

    <!-- IXAudio2 -->
    <map method="IXAudio2::Initialize" visibility="internal" />
    <map method="IXAudio2::GetDeviceDetails" visibility="internal" />
    <map method="IXAudio2::Create.*" visibility="internal" />
    <map param="IXAudio2::CreateSourceVoice::Flags" type="XAUDIO2_VOICE_FLAGS" />
    <map param="IXAudio2::CreateSourceVoice::pSourceFormat" type="void" />

    <map method="IXAudio2::(Unr|R)egisterForCallbacks" visibility="internal" />
    <map interface="IXAudio2EngineCallback" visibility="internal" />
    <map interface="IXAudio2.*Callback" callback="true" callback-dual="false" />

    <!-- IXAudio2Voice -->
    <map method="IXAudio2Voice::SetOutputVoices" visibility="internal" property="false"/>
    <map method="IXAudio2Voice::GetEffectParameters" visibility="internal" />
    <map method="IXAudio2Voice::SetEffectParameters" visibility="internal" hresult="true" check="false" />
    <map method="IXAudio2Voice::SetEffectChain" visibility="internal" property="false" />
    <map method="IXAudio2Voice::GetVolume" visibility="private" property="false"/>

    <!-- IXAudio2SourceVoice -->
    <map method="IXAudio2SourceVoice::SetSourceSampleRate" property="false"/>
    <map method="IXAudio2SourceVoice::Start" visibility="internal" />
    <map param="IXAudio2SourceVoice::Stop::Flags" type="XAUDIO2_PLAY_FLAGS" />
    <map method="IXAudio2SourceVoice::SubmitSourceBuffer" visibility="internal" />
    <map method="IXAudio2SourceVoice::GetState" visibility="internal" />
    <map method="IXAudio2SourceVoice::GetFrequencyRatio" visibility="internal" />

    <map interface="IXAudio2VoiceCallback" callback="true" visibility="internal" />
    <map interface="IXAudio2EngineCallback" callback="true" />

    <remove interface="IXAudio2Extension"/>
    <remove function="XAudio2Create.*"/>
    <remove function="CreateAudio.*"/>

    <!-- X3DAudio -->
    <!-- Enums -->
    <map enum="X3DAUDIO(.*)" name-tmp="$1" />
    <map enum="X3DAudioCalculateFlags" name="CalculateFlags" flags="true"/>
    <map enum-item="X3DAUDIO_CALCULATE_(.*)" name-tmp="$1" />
    <map enum-item="X3DAUDIO_CALCULATE_ZEROCENTER" name="ZeroCenter"/>

    <!-- Structs -->
    <map struct="X3DAUDIO(.*)" name-tmp="$1" />
    <map field="X3DAUDIO_.*::p([A-Z].*)" name-tmp="$1Pointer" visibility="internal"/>

    <map struct="X3DAUDIO_DISTANCE_CURVE" visibility="internal"/>
    <map struct="X3DAUDIO_DISTANCE_CURVE_POINT" name="CurvePoint"/>
    <map field="X3DAUDIO_DISTANCE_CURVE_POINT::DSPSetting" name="DspSetting"/>

    <!-- X3DAUDIO_CONE -->
    <map field="X3DAUDIO_CONE::InnerLPF" name="InnerLpf"/>
    <map field="X3DAUDIO_CONE::OuterLPF" name="OuterLpf"/>
    <map struct="X3DAUDIO_EMITTER" native="true" struct-to-class="true" marshal="true"/>
    <map struct="X3DAUDIO_LISTENER" native="true" struct-to-class="true" marshal="true"/>

    <map struct="X3DAUDIO_DSP_SETTINGS" native="true" struct-to-class="true" marshal="true"/>
    <map field="X3DAUDIO_DSP_SETTINGS::SrcChannelCount" name="SourceChannelCount" visibility="public readonly"/>
    <map field="X3DAUDIO_DSP_SETTINGS::DstChannelCount" name="DestinationChannelCount" visibility="public readonly"/>

    <map field=".*::LFE(.*)" name="Lfe$1"/>
    <map field=".*::LPF(.*)" name="Lpf$1"/>

    <map struct="XAUDIO2FX_VOLUMEMETER_LEVELS" name="VolumeMeterLevels" struct-to-class="true" marshal="true" />
    <remove field="XAUDIO2FX_VOLUMEMETER_LEVELS::.*"/>

    <remove function="X3DAudio.*"/>
  </mapping>
</config>
