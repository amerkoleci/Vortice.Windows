<?xml version="1.0" encoding="utf-8"?>
<config id="vortice-media-foundation" xmlns="urn:SharpGen.Config">
  <namespace>Vortice.MediaFoundation</namespace>
  <depends>Vortice.DirectX</depends>
  <depends>Vortice.Multimedia</depends>

  <sdk name="WindowsSdk" version="10.0.20348.0" />
  <sdk name="StdLib" />

  <!--<include file="uuids.h" attach="true"/>-->
  <include file="propsys.h">
    <attach>INamedPropertyStore</attach>
  </include>
  <include file="wmcontainer.h" attach="true"/>
  <include file="mferror.h" attach="true"/>
  <include file="mfidl.h" attach="true"/>
  <include file="mfreadwrite.h" attach="true"/>
  <include file="mfobjects.h" attach="true"/>
  <include file="mftransform.h" attach="true"/>
  <include file="mmdeviceapi.h" attach="true"/>
  <include file="mfplay.h" attach="true"/>
  <include file="mfapi.h" attach="true">
    <pre>
      #undef DIRECT3D_VERSION
    </pre>
  </include>

  <include file="evr.h" attach="true">
    <pre>
      #define __AUDIODEFS_INCLUDED__
    </pre>
  </include>

  <extension>
    <create class="MediaFactory" visibility="public static" />
    <const from-macro="MF_VERSION" class="Vortice.MediaFoundation.MediaFactory" type="int" name="Version" />

    <create class="ResultCode" visibility="public"/>
    <const from-macro="MF_E_(.*)" cpp-type="int" name="$1" class="Vortice.MediaFoundation.ResultCode" result="true" />

    <define enum="Vortice.MediaFoundation.MediaEventTypes" sizeof="4" />
    <define enum="Vortice.MediaFoundation.DeviceStates" sizeof="4" />
  </extension>

  <bindings>
    <bind from="MEDIA_EVENT_TYPES" to="Vortice.MediaFoundation.MediaEventTypes"/>
    <bind from="MPEG1VIDEOINFO" to="Vortice.MediaFoundation.Mpeg1VideoInformation"/>
    <bind from="MPEG2VIDEOINFO" to="Vortice.MediaFoundation.Mpeg2VideoInformation"/>
    <bind from="VIDEOINFOHEADER2" to="Vortice.MediaFoundation.VideoInformationHeader2"/>
    <bind from="RESOURCE_CHARACTERISTICS" to="Vortice.MediaFoundation.ResourceCharacteristics"/>
    <bind from="MFARGB" to="Vortice.Mathematics.Color4"/>
  </bindings>

  <naming>
    <short name="MFINPUTTRUSTAUTHORITY">InputTrustAuthority</short>
    <short name="GETFULLTOPOLOGY">GetFullTopology</short>
    <short name="SETTOPOLOGY">SetTopology</short>
    <short name="MEDIASOURCE">MediaSource</short>
    <short name="BYTESTREAM">ByteStream</short>
    <short name="EDGEMODE">EdgeMode</short>
    <short name="ACCESSMODE">AccessMode</short>
    <short name="OPENMODE">OpenMode</short>
  </naming>

  <mapping>
    <!-- Enums -->
    <remove enum-item=".*_Mask"/>
    <map enum="MF(.*)" name-tmp="$1"/>
    <map enum="_MFT_(.*)" name-tmp="$1"/>
    <map enum-item="MFT_(.*)" name-tmp="$1"/>
    <map enum="MFT_INPUT_STREAM_INFO" name="InputStreamInfo"/>
    <map enum="MFT_OUTPUT_DATA_BUFFER" name="OutputDataBuffer"/>
    <map enum="MFT_OUTPUT_STREAM_INFO" name="OutputStreamInfo"/>
    <map enum="MFT_REGISTER_TYPE_INFO" name="RegisterTypeInfo"/>
    <map enum="MFT_STREAM_STATE_PARAM" name="StreamStateParam"/>
    <map enum-item="MFNominalRange_([0-9].*)" name="Range$1"/>

    <map enum="MF_TOPOSTATUS" name="TopologyStatus"/>

    <map enum="MFASYNC_CALLBACK_QUEUE" name="WorkQueueType"/>
    <map enum-item="MFASYNC_CALLBACK_QUEUE_(.*)" name-tmp="$1"/>

    <map enum="#MF_RESOLUTION_MEDIASOURCE" name="SourceResolverFlags" none="true" flags="true"/>
    <map enum-item="MF_RESOLUTION_(.*)" name-tmp="$1"/>

    <map enum="#MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL" name="ActivateCustomMixerFlags" none="true" flags="true"/>
    <map enum-item="MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL" name="AllowFail"/>

    <map enum="#MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL" name="ActivateCustomPresenterFlags" none="true" flags="true"/>
    <map enum-item="MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL" name="AllowFail"/>

    <map enum="MF2DBuffer_LockFlags" name="Buffer2DLockFlags"/>
    <remove enum-item="MF2DBuffer_LockFlags_ForceDWORD"/>


    <map enum="MF3DVideoOutputType" name="Video3DOutputType"/>
    <map enum-item="MFCameraIntrinsic_DistortionModelType_6KT" name="SixKT"/>
    <map enum-item="MFVideoSphericalFormat_3DMesh" name="ThreeDMesh"/>
    <map enum-item="MFVideoRotationFormat_(.*)" name="Angle$1"/>
    <map enum-item="MFVideoSrcContentHintFlag_16x9" name="Hint16x9"/>
    <map enum-item="MFVideoSrcContentHintFlag_235_1" name="Hint235_1"/>

    <map enum="#MEUnknown" name="MediaEventTypes"/>
    <map enum-item="ME(.*)" name-tmp="$1"/>
    <map enum-item="MEWMDRM(.*)" name-tmp="WindowsMediaDRM$1"/>
    <remove enum="MEReservedMax"/>

    <!-- WASAIP -->
    <map enum="EDataFlow" name="DataFlow"/>
    <map enum="ERole" name="Role"/>

    <map enum-item="eRender" name="Render"/>
    <map enum-item="eCapture" name="Capture"/>
    <map enum-item="eConsole" name="Console"/>
    <map enum-item="eAll" name="All"/>
    <map enum-item="eMultimedia" name="Multimedia"/>
    <map enum-item="eCommunications" name="Communications"/>
    <remove enum-item=".*_enum_count"/>

    <!-- Structs -->
    <map struct="MF(.*)" name-tmp="$1"/>

    <!-- IMFByteStream -->
    <map interface="IMFByteStream" callback="true" callback-dual="true" callback-visibility="public" autogen-shadow="true" callback-name="MFByteStream" />
    <map param="IMFByteStream::*.*::pb" type="void" attribute="in"/>
    <map param="IMFByteStream::Begin[RW].*::punkState" type="void"/>

    <!-- Interfaces -->
    <!-- IMFMediaSession -->
    <map method="IMFMediaSession::(.*)" hresult="true" check="false"/>
    <map param="IMFMediaSession::GetFullTopology::dwGetFullTopologyFlags" type="MFSESSION_SETTOPOLOGY_FLAGS"/>
    <map param="IMFMediaSession::SetTopology::dwSetTopologyFlags" type="MFSESSION_SETTOPOLOGY_FLAGS"/>

    <!-- IMFSourceResolver -->
    <map method="IMFSourceResolver::(.*)" hresult="true" check="false"/>
    <map method="IMFSourceResolver::CreateObjectFromURL" visibility="internal"/>
    <map param="IMFSourceResolver::CreateObjectFromURL::ppObject" attribute="out" type="void"/>
    <map method="IMFSourceResolver::CreateObjectFromByteStream" visibility="internal"/>
    <map param="IMFSourceResolver::CreateObjectFromByteStream::ppObject" attribute="out" type="void"/>


    <!-- IMFMediaEvent -->
    <map param="IMFMediaEvent::GetType::pmet" type="MEDIA_EVENT_TYPES"/>

    <!-- IMMDeviceEnumerator -->
    <map method="IMMDeviceEnumerator::(.*)" hresult="true" check="false"/>
    <map method="IMMDeviceEnumerator::EnumAudioEndpoints" visibility="internal"/>

    <!-- IMMDeviceCollection -->
    <map interface="IMMDeviceCollection" visibility="internal" />

    <!-- IMMDevice -->
    <map method="IMMDevice::(.*)" hresult="true" check="false"/>
    <map method="IMMDevice::GetState" visibility="internal" property="false" />
    <map method="IMMDevice::OpenPropertyStore" visibility="internal" />
    <map method="IMMDevice::GetId" visibility="internal" />

    <!-- IMFDXGIDeviceManager -->
    <map method="IMFDXGIDeviceManager::(.*)" hresult="true" check="false"/>
    <map method="IMFDXGIDeviceManager::ResetDevice" visibility="internal" />
    <map method="IMFDXGIDeviceManager::LockDevice" visibility="internal"/>
    <map method="IMFDXGIDeviceManager::UnlockDevice" visibility="internal" />

    <!-- Functions -->
    <remove function="IMF.*"/>
    <map function="MF.*" dll='"Mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" />
    <!--<map function="MFCreateLegacyMediaBufferOnMFMediaBuffer" dll='"Mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />-->
    <remove function="MFCreateLegacyMediaBufferOnMFMediaBuffer"/>
    <remove function="MFInitMediaTypeFromVideoInfoHeader" />
    <remove function="MFInitMediaTypeFromMPEG1VideoInfo" />
    <remove function="MFInitMediaTypeFromVideoInfoHeader2" />
    <remove function="MFInitMediaTypeFromAMMediaType" />
    <remove function="MFInitMediaTypeFromVideoInfoHeader" />
    <remove function="MFInitMediaTypeFromMPEG2VideoInfo" />
    <remove function="MFInitAMMediaTypeFromMFMediaType" />
    <remove function="MFCreateAMMediaTypeFromMFMediaType"/>

    <map function="MFStartup" visibility="private" />
    <map param="MFCreateAttributes::cInitialSize" default="0"/>

    <map function="MFCreateVideoPresenter" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoMixer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoMixerAndPresenter" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoRenderer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoSampleFromSurface" dll='"EVR.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoSampleAllocator" dll='"EVR.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFSerializeAttributesToStream" dll='"Mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFDeserializeAttributesFromStream" dll='"Mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTransformActivate" dll='"Mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFTranscodeGetAudioOutputAvailableTypes" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFShutdownObject" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFRR_CreateActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFRequireProtectedEnvironment" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFReadSequencerSegmentOffset" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFLoadSignedLibrary" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetTopoNodeCurrentType" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetSystemId" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetSupportedSchemes" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetSupportedMimeTypes" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetService" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetMultipleServiceProviders" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetLocalId" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFEnumDeviceSources" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateWMVEncoderActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateWMAEncoderActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoRendererActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateVideoRenderer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateUrlmonSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTranscodeTopologyFromByteStream" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTranscodeTopology" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTranscodeSinkActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTranscodeProfile" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTopologyNode" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTopology" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTopoLoader" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateStandardQualityManager" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFCreateSoundEventSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSimpleTypeHandler" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSequencerSourceRemoteStream" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSequencerSource" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSequencerSegmentOffset" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSecureHttpSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSampleGrabberSinkActivate" visibility="internal" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSampleCopierMFT" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSAMIByteStreamPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateRemoteDesktopPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateProxyLocator" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateProtectedEnvironmentAccess" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePresentationDescriptorFromASFProfile" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePresentationClock" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePMPServer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePMPMediaSession" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePMPHost" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateNSCByteStreamPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateNetSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMuxSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMPEG4MediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMP3MediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMP3ByteStreamPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMediaSession" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMediaProcessor" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateLPCMByteStreamPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateHttpSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateFMPEG4MediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateFileSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateFileBlockMap" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateDrmNetNDSchemePlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateDeviceSourceActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateDeviceSource" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateCredentialCache" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateCacheManager" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateByteCacheFile" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAudioRendererActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAudioRenderer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFStreamSelector" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFStreamingMediaSinkActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFStreamingMediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFSplitter" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFProfileFromPresentationDescriptor" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFProfile" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFMultiplexer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFMediaSinkActivate" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFMediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFIndexerByteStream" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFIndexer" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFContentInfo" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateASFByteStreamPlugin" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAppSourceProxy" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAggregateSource" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateADTSMediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAC3MediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreate3GPMediaSink" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MergePropertyStore" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="ExtractPropVariant" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="DllGetClassObject" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="DllGetActivationFactory" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="DllCanUnloadNow" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="CreateNamedPropertyStore" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="CopyPropertyStore" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="ConvertPropVariant" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="AppendPropVariant" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFPCreateMediaPlayer" dll='"mfplay.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSourceResolver" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="CreatePropertyStore" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFGetSystemTime" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSystemTimeSource" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePresentationDescriptor" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFSerializePresentationDescriptor" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFDeserializePresentationDescriptor" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateStreamDescriptor" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateAVIMediaSink" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateWAVEMediaSink" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateTrackedSample" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <!-- MFCreateMFByteStreamOnStream -->
    <map function="MFCreateMFByteStreamOnStream" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" visibility="internal" />
    <map param="MFCreateMFByteStreamOnStream::ppByteStream" attribute="out fast"/>

    <!--MFCreateMFByteStreamOnStreamEx -->
    <map function="MFCreateMFByteStreamOnStreamEx" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map param="MFCreateMFByteStreamOnStreamEx::ppByteStream" attribute="out fast"/>

    <map function="MFCreateStreamOnMFByteStream" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateStreamOnMFByteStreamEx" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateMediaTypeFromProperties" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreatePropertiesFromMediaType" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateContentProtectionDevice" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFIsContentProtectionDeviceSupported" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateContentDecryptorContext" dll='"mfplat.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSensorGroup" dll='"Mfsensorgroup.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSensorStream" dll='"Mfsensorgroup.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSensorProfile" dll='"Mfsensorgroup.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSensorProfileCollection" dll='"Mfsensorgroup.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateSensorActivityMonitor" dll='"Mfsensorgroup.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateExtendedCameraIntrinsics" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateExtendedCameraIntrinsicModel" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />
    <map function="MFCreateRelativePanelWatcher" dll='"mf.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFCreateVideoSampleFromSurface" dll='"EVR.dll"' group="Vortice.MediaFoundation.MediaFactory" hresult="true" check="false" />

    <map function="MFCreateDXGIDeviceManager" visibility="internal" hresult="true" check="false" />

    <!-- WASAPI -->
    <remove function="ActivateAudioInterfaceAsync"/>
  </mapping>
</config>
